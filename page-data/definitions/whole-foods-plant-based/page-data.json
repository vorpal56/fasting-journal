{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/definitions/Whole-Foods-Plant-Based","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"whole-foods-plant-based-vs-veganism\"\n  }, \"Whole Foods Plant Based vs. Veganism\"), mdx(\"p\", null, \"Whole Foods Plant Based is a diet focused around low processed natural foods including fruits, vegetables, whole grains, legumes, seeds and nuts. It's more so centered around health compared to veganism. Veganism on the otherhand is the abstinence of animal products and promotes a philosophy of avoiding the use of animals for food, commodities, work, hunting, and other sources of exploitation. One important part I find is that you can be an unhealthy vegan. For example, Oreos are vegan, and I can eat that my entire life and consider myself vegan, but in no way is it healthy. Both the philosophy of veganism and the health promoting benefits of a whole foods plant based diet is what I believe to be optimal.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"why-i-started-fasting\"\n  }, \"Why I Started Fasting\"), mdx(\"p\", null, \"For pretty much my entire life, I have been skinny fat, and I wanted to do something about it. I had asked the question, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\"how do you lose fat\\\", not just \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/Weight\",\n    \"title\": \"Weight\"\n  }, \"[[Weight]]\"), \"\"), \". I had adopted the \\\"eat less, move more\\\" mentality over my highschool years since that was what mainstream fitness media told me to do, but I was never able to stick with it.\"), mdx(\"p\", null, \"After highschool, I went to university and in the first year, it was mandatory for us to have a meal plan. This was buffet-style, which included a wide range of American-like foods including french fries, pizza, burgers, hash browns, cereal, ice cream, muffins. It had a lot of decadent food options, ones that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"gave you what you wanted, not what you needed\"), \". I brought home lots of these to snack on back home, which grew my unhealthy eating habits and my urge to constantly eat.\"), mdx(\"p\", null, \"In my second year, I had challenged myself to exercise more and first learned about the idea of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Fasting\",\n    \"title\": \"Fasting\"\n  }, \"[[Fasting]]\"), \". During this period I had went from 180lbs to 150-155lbs in about 4-6 months, adopting an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/OMAD\",\n    \"title\": \"OMAD\"\n  }, \"[[OMAD]]\"), \" protocol revolving around a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Whole-Foods-Plant-Based\",\n    \"title\": \"Whole-Foods-Plant-Based\"\n  }, \"[[Whole-Foods-Plant-Based]]\"), \" diet. This took me by surprise because I didn't even realize I was doing this, it was just part of my routine. I knew I was eating healthier foods, but I didn't know that I wasn't eating throughout the entire day. I wish I had documented it when first did this, but that's why I'm doing it now. I regained all of my weight back and more because I had eaten garbage food over my co-op and I didn't take care of my body. I had indulged with my Mom, and in January 2021, I was my heaviest at 197lbs.\"), mdx(\"p\", null, \"Later in March 2021, this is when I said enough is enough and I was committed to adopting an extended fast. This is when I started \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Day-0\",\n    \"title\": \"Day-0\"\n  }, \"[[Day-0]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"228b6880-0e44-585f-bf74-4c927e2e3f40","fields":{"slug":"/Why-I-Started","title":"Why I Started Fasting"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Refeeding is the process of reintroducing food to the system after a fasting period. It dictates how we handle the refeeding. As the length of the fast increases, refeeding becomes just as crucial as the fast itself. Our stomachs become smaller and smaller the longer the fasting period and the more sensitive it is to changes to food. This can especially affect our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Gut-Microbiome\",\n    \"title\": \"Gut-Microbiome\"\n  }, \"[[Gut-Microbiome]]\"), \" and the effects of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Insulin\",\n    \"title\": \"Insulin\"\n  }, \"[[Insulin]]\"), \". Taking a safe approach to refeeding doesn't put our body in to shock and dismiss all the hard work that was done.\"), mdx(\"p\", null, \"There's a lot of weird and counterintuitive information out there on refeeding, but the most informative video that I've found is from Dorian Wilson, called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://youtu.be/h3L_118IIgE\"\n  }, \"How to Break a Fast: Best Results & Worst Mistakes\"), \". \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TL;DW\"), \" of it is to avoid highly processed foods, which usually contain lots of refined sugar and spike \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Insulin\",\n    \"title\": \"Insulin\"\n  }, \"[[Insulin]]\"), \" or sodium. Since protein and fat doesn't increase insulin as much as carbohydrates, it can be good to incorporate a combination of protein and fat with low carbohydrates. Since my plan is to readopt a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Whole-Foods-Plant-Based\",\n    \"title\": \"Whole-Foods-Plant-Based\"\n  }, \"[[Whole-Foods-Plant-Based]]\"), \" diet, I'm going to do make some green juices (some green vegetable + water), then some miso soup with tofu. I will continue this until I can introduce more solid foods like fruits with high water content (asian pear, grapes, watermelon) and raw/fermented/pickled vegetables including kimchi, miso, sauerkraut, and keffer, to promote a good \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Gut-Microbiome\",\n    \"title\": \"Gut-Microbiome\"\n  }, \"[[Gut-Microbiome]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"aeab06b1-bd79-5998-aec3-b3eb8c0e7b9d","fields":{"slug":"/definitions/Refeeding","title":"Refeeding"}}}]},"fields":{"slug":"/definitions/Whole-Foods-Plant-Based","title":"Whole Foods Plant Based vs. Veganism"}}},"pageContext":{"id":"21a856e2-75e6-50a3-9ba0-f5e7fed4f954"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}